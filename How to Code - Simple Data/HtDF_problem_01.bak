;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-reader.ss" "lang")((modname HtDF_problem_01) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #f)))
;; Problem: Design a function that pluralizes a given word.
;; (Pluralize means to convert the word to its plural form.)
;; For simplicity you may assume that just adding s is enough to pluralize a word.

;; String -> String (sig)
;; Take a string and add "s" to pluralize
(check-expect (pluralize "book") "books")
(check-expect (pluralize "cat") "cats")

;(define (pluralize s) "dog") ;stub

;(define (pluralize s) ;template
;  (... s))

(define (pluralize s)
  (string-append s "s"))

(pluralize "elephant")
